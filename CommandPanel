package debback2;

import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.LinkedList;

import javax.swing.JPanel;
import javax.swing.JTextField;

public class CommandPanel extends JPanel { // commandpanel takes commands from user

	private static final long serialVersionUID = 1L;

	private static final int FONT_SIZE = 14;

	private JTextField commandField = new JTextField(); // creates a textfield

	private LinkedList<String> commandBuffer = new LinkedList<String>();

	CommandPanel() {

		class AddActionListener implements ActionListener {

			public void actionPerformed(ActionEvent event) {

				synchronized (commandBuffer) {

					commandBuffer.add(commandField.getText());

					commandField.setText("");

					commandBuffer.notify();

				}

				return;

			}

		}

		ActionListener listener = new AddActionListener();

		commandField.addActionListener(listener);

		commandField.setFont(new Font("Times New Roman", Font.PLAIN, FONT_SIZE));

		setLayout(new BorderLayout());

		add(commandField, BorderLayout.CENTER);

		return;

	}

	public String getCommand() { // function to get the text from the commandpanel

		String command;

		synchronized (commandBuffer) {

			while (commandBuffer.isEmpty()) {

				try {

					commandBuffer.wait();

				} catch (InterruptedException e) {

					e.printStackTrace();

				}

			}

			command = commandBuffer.pop();

		}

		return command;

	}

}
